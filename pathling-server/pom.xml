<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>au.csiro.pathling</groupId>
  <artifactId>pathling-server</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <pathling.version>8.1.1-SNAPSHOT</pathling.version>
    <pathling.hapiFhirVersion>8.4.0</pathling.hapiFhirVersion>
    <pathling.springBootVersion>3.3.5</pathling.springBootVersion>
    <pathling.sparkVersion>3.5.5</pathling.sparkVersion>
    <pathling.scalaVersion>2.12</pathling.scalaVersion>
    <pathling.deltaVersion>3.3.0</pathling.deltaVersion>
    <pathling.nettyVersion>4.1.114.Final</pathling.nettyVersion>
    <pathling.testSetup.skip>true</pathling.testSetup.skip>
    <pathling.jacksonVersion>2.18.1</pathling.jacksonVersion>

    <project.majorVersion>8</project.majorVersion>

    <pathling.fhirServerDockerRepo>aehrc/pathling</pathling.fhirServerDockerRepo>
    <pathling.fhirServerDockerTag>latest</pathling.fhirServerDockerTag>
    <pathling.dockerArchitecture>arm64</pathling.dockerArchitecture>
    <jmh.version>1.37</jmh.version>
    <pathling.dockerBaseImage>amazoncorretto:17</pathling.dockerBaseImage>
  </properties>

  <dependencies>
    <dependency>
      <groupId>au.csiro.pathling</groupId>
      <artifactId>utilities</artifactId>
      <version>${pathling.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <version>6.5.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <version>${pathling.springBootVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-resource-server</artifactId>
      <version>6.5.3</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-jose</artifactId>
      <version>6.5.3</version>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>au.csiro.pathling</groupId>
      <artifactId>test-data</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>au.csiro.pathling</groupId>
      <artifactId>fhirpath</artifactId>
      <version>${pathling.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.27.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <version>${pathling.springBootVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.13.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-structures-r4</artifactId>
      <version>${pathling.hapiFhirVersion}</version>
    </dependency>
    <dependency>
      <groupId>au.csiro.pathling</groupId>
      <artifactId>library-runtime</artifactId>
      <version>8.1.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>io.sentry</groupId>
      <artifactId>sentry</artifactId>
      <version>6.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${pathling.scalaVersion}</artifactId>
      <version>${pathling.sparkVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${pathling.scalaVersion}</artifactId>
      <version>${pathling.sparkVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-kubernetes_${pathling.scalaVersion}</artifactId>
      <version>${pathling.sparkVersion}</version>
    </dependency>
    <dependency>
      <groupId>io.delta</groupId>
      <artifactId>delta-spark_${pathling.scalaVersion}</artifactId>
      <version>${pathling.deltaVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_${pathling.scalaVersion}</artifactId>
      <version>${pathling.sparkVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
      <version>${pathling.springBootVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
      <version>${pathling.springBootVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${pathling.springBootVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-base</artifactId>
      <version>${pathling.hapiFhirVersion}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-structures-r4</artifactId>
      <version>${pathling.hapiFhirVersion}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-server</artifactId>
      <version>${pathling.hapiFhirVersion}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-client</artifactId>
      <version>${pathling.hapiFhirVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.34</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.5.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-failsafe-plugin</artifactId>
      <version>3.5.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>exec-maven-plugin</artifactId>
      <version>3.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents.client5</groupId>
      <artifactId>httpclient5</artifactId>
      <version>5.1.3</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${pathling.jacksonVersion}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-bom</artifactId>
        <version>${pathling.nettyVersion}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.10</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>import-test-data</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-classpath</argument>
                <classpath/>
                <argument>-Xmx4g</argument>
                <argument>-Duser.timezone=UTC</argument>
                <argument>--add-exports=java.base/sun.nio.ch=ALL-UNNAMED</argument>
                <argument>--add-opens=java.base/java.net=ALL-UNNAMED</argument>
                <argument>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</argument>
                <argument>-Dspring.profiles.active=spark,fhir,import,cli</argument>
                <argument>-Dpathling.version=${project.version}</argument>
                <argument>-Dpathling.terminology.enabled=false</argument>
                <argument>-Dpathling.storage.warehouseUrl=file://${project.basedir}/src/test/resources/test-data</argument>
                <argument>-Dpathling.storage.databaseName=parquet</argument>
                <argument>-Dspark.master=local[1]</argument>
                <argument>au.csiro.pathling.util.TestDataImporter</argument>
                <argument>${project.basedir}/src/test/resources/test-data/fhir</argument>
                <argument>download=${pathling.testSetup.skip}</argument>
              </arguments>
              <classpathScope>test</classpathScope>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <jvmArguments>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED</jvmArguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.5.3</version>
        <configuration>
          <groups>IntegrationTest</groups>
          <argLine>
            --add-opens java.base/java.lang=ALL-UNNAMED
            --add-opens java.base/java.lang.invoke=ALL-UNNAMED
            --add-opens java.base/java.lang.reflect=ALL-UNNAMED
            --add-opens java.base/java.io=ALL-UNNAMED
            --add-opens java.base/java.net=ALL-UNNAMED
            --add-opens java.base/java.nio=ALL-UNNAMED
            --add-opens java.base/java.util=ALL-UNNAMED
            --add-opens java.base/java.util.concurrent=ALL-UNNAMED
            --add-opens java.base/java.util.concurrent.atomic=ALL-UNNAMED
            --add-opens java.base/sun.nio.ch=ALL-UNNAMED
            --add-opens java.base/sun.nio.cs=ALL-UNNAMED
            --add-opens java.base/sun.security.action=ALL-UNNAMED
            --add-opens java.base/sun.util.calendar=ALL-UNNAMED
            --add-exports java.base/sun.nio.ch=ALL-UNNAMED
          </argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.3</version>
        <configuration>
          <excludedGroups>IntegrationTest</excludedGroups>
          <forkCount>2</forkCount>
          <properties>
            <configurationParameters>
              junit.jupiter.execution.parallel.enabled=true
            </configurationParameters>
          </properties>
          <argLine>
            --add-opens java.base/java.lang=ALL-UNNAMED
            --add-opens java.base/java.lang.invoke=ALL-UNNAMED
            --add-opens java.base/java.lang.reflect=ALL-UNNAMED
            --add-opens java.base/java.io=ALL-UNNAMED
            --add-opens java.base/java.net=ALL-UNNAMED
            --add-opens java.base/java.nio=ALL-UNNAMED
            --add-opens java.base/java.util=ALL-UNNAMED
            --add-opens java.base/java.util.concurrent=ALL-UNNAMED
            --add-opens java.base/java.util.concurrent.atomic=ALL-UNNAMED
            --add-opens java.base/sun.nio.ch=ALL-UNNAMED
            --add-opens java.base/sun.nio.cs=ALL-UNNAMED
            --add-opens java.base/sun.security.action=ALL-UNNAMED
            --add-opens java.base/sun.util.calendar=ALL-UNNAMED
            --add-exports java.base/sun.nio.ch=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>system-test</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <classesDirectory>${project.build.outputDirectory}</classesDirectory>
              <includes>
                <include>**/*.java</include>
              </includes>
              <groups>SystemTest</groups>
              <systemPropertyVariables>
                <pathling.systemTest.version>${git.commit.id}</pathling.systemTest.version>
                <pathling.systemTest.auth.issuer>
                  https://auth.ontoserver.csiro.au/auth/realms/aehrc
                </pathling.systemTest.auth.issuer>
                <pathling.systemTest.auth.clientId>pathling-test</pathling.systemTest.auth.clientId>
                <pathling.systemTest.auth.requestedScope>
                  openid user/*.*
                </pathling.systemTest.auth.requestedScope>
                <pathling.systemTest.terminology.serverUrl>
                  https://tx.ontoserver.csiro.au/fhir
                </pathling.systemTest.terminology.serverUrl>
                <pathling.systemTest.dockerRepository>
                  ${pathling.fhirServerDockerRepo}
                </pathling.systemTest.dockerRepository>
                <spring.profiles.active>system-test</spring.profiles.active>
              </systemPropertyVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <configuration>
              <from>
                <image>${pathling.dockerBaseImage}</image>
                <platforms>
                  <platform>
                    <architecture>amd64</architecture>
                    <os>linux</os>
                  </platform>
                  <platform>
                    <architecture>arm64</architecture>
                    <os>linux</os>
                  </platform>
                </platforms>
              </from>
              <container>
                <jvmFlags>
                  <jvmFlag>--add-exports=java.base/sun.nio.ch=ALL-UNNAMED</jvmFlag>
                  <jvmFlag>--add-opens=java.base/java.net=ALL-UNNAMED</jvmFlag>
                  <jvmFlag>--add-opens=java.base/sun.util.calendar=ALL-UNNAMED</jvmFlag>
                </jvmFlags>
              </container>
            </configuration>
            <executions>
              <execution>
                <id>build</id>
                <phase>package</phase>
                <goals>
                  <goal>dockerBuild</goal>
                </goals>
              </execution>
              <execution>
                <id>deploy</id>
                <phase>deploy</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <to>
                    <image>${pathling.fhirServerDockerRepo}</image>
                    <tags>
                      <tag>${pathling.fhirServerDockerTag}</tag>
                      <tag>${project.version}</tag>
                      <tag>${project.majorVersion}</tag>
                    </tags>
                  </to>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dockerPreRelease</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>deploy</id>
                <phase>deploy</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <from>
                    <image>${pathling.dockerBaseImage}</image>
                    <platforms>
                      <platform>
                        <architecture>amd64</architecture>
                        <os>linux</os>
                      </platform>
                      <platform>
                        <architecture>arm64</architecture>
                        <os>linux</os>
                      </platform>
                    </platforms>
                  </from>
                  <to combine.self="override">
                    <image>${pathling.fhirServerDockerRepo}:${pathling.fhirServerDockerTag}-develop</image>
                  </to>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/releases/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
</project>
