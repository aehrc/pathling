<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2018-2021, Commonwealth Scientific and Industrial Research
  ~ Organisation (CSIRO) ABN 41 687 119 230. Licensed under the CSIRO Open Source
  ~ Software Licence Agreement.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>au.csiro.pathling</groupId>
    <artifactId>pathling</artifactId>
    <version>3.0.0</version>
  </parent>
  <artifactId>fhir-server</artifactId>
  <packaging>jar</packaging>

  <name>Pathling Server</name>
  <description>A server that exposes Pathling functionality through a FHIR API.</description>

  <properties>
    <pathling.antlrVersion>4.9.1</pathling.antlrVersion>
    <pathling.fhirServerDockerRepo>aehrc/pathling</pathling.fhirServerDockerRepo>
  </properties>

  <dependencies>
    <!-- Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>

    <!-- HAPI FHIR -->
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-base</artifactId>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-structures-r4</artifactId>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-server</artifactId>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-client</artifactId>
    </dependency>
    <!-- Woodstox is used by HAPI for XML processing -->
    <dependency>
      <groupId>com.fasterxml.woodstox</groupId>
      <artifactId>woodstox-core</artifactId>
    </dependency>

    <!-- Apache Spark -->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${pathling.sparkScalaVersion}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${pathling.sparkScalaVersion}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-aws</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>

    <!-- Encoders -->
    <dependency>
      <groupId>au.csiro.pathling</groupId>
      <artifactId>encoders</artifactId>
    </dependency>

    <!-- Logging -->
    <dependency>
      <artifactId>logback-classic</artifactId>
      <groupId>ch.qos.logback</groupId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- Authorisation -->
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
      <version>3.12.1</version>
    </dependency>
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>jwks-rsa</artifactId>
      <version>0.15.0</version>
    </dependency>

    <!-- ANTLR -->
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4</artifactId>
      <version>${pathling.antlrVersion}</version>
    </dependency>

    <!-- Error monitoring -->
    <dependency>
      <groupId>io.sentry</groupId>
      <artifactId>sentry</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.github.docker-java</groupId>
      <artifactId>docker-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.docker-java</groupId>
      <artifactId>docker-java-transport-okhttp</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <version>2.27.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>${pathling.antlrVersion}</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr4</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <visitor>true</visitor>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.basedir}/src/test/resources/test-data/parquet</directory>
              <includes>
                <include>*.parquet</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <groups>UnitTest</groups>
              <systemPropertyVariables>
                <spring.profiles.active>unit-test</spring.profiles.active>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <groups>IntegrationTest</groups>
              <systemPropertyVariables>
                <spring.profiles.active>core,server,integration-test</spring.profiles.active>
                <pathling.storage.warehouseUrl>
                  file://${project.basedir}/src/test/resources/test-data
                </pathling.storage.warehouseUrl>
                <pathling.storage.databaseName>parquet</pathling.storage.databaseName>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>import-test-data</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>import-test-data</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mainClass>au.csiro.pathling.test.TestDataImporter</mainClass>
              <systemProperties>
                <property>
                  <key>spring.profiles.active</key>
                  <value>spark,fhir,cli</value>
                </property>
                <property>
                  <key>pathling.version</key>
                  <value>${project.version}</value>
                </property>
                <property>
                  <key>pathling.terminology.enabled</key>
                  <value>false</value>
                </property>
              </systemProperties>
              <arguments>
                <argument>${project.basedir}/src/test/resources/test-data/fhir</argument>
                <argument>${project.basedir}/src/test/resources/test-data/parquet</argument>
              </arguments>
              <classpathScope>test</classpathScope>
              <cleanupDaemonThreads>false</cleanupDaemonThreads>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <includes>
                <include>**/*.java</include>
              </includes>
              <groups>SystemTest</groups>
              <systemPropertyVariables>
                <pathling.systemTest.version>${project.version}</pathling.systemTest.version>
                <pathling.systemTest.terminology.serverUrl>
                  https://r4.ontoserver.csiro.au/fhir
                </pathling.systemTest.terminology.serverUrl>
                <pathling.systemTest.dockerRepository>
                  ${pathling.fhirServerDockerRepo}
                </pathling.systemTest.dockerRepository>
                <spring.profiles.active>system-test</spring.profiles.active>
              </systemPropertyVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <tag>${project.version}</tag>
                  <buildArgs>
                    <VERSION>${project.version}</VERSION>
                    <HADOOP_MIRROR>${pathling.hadoopMirror}</HADOOP_MIRROR>
                    <HADOOP_VERSION>${pathling.hadoopVersion}</HADOOP_VERSION>
                    <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                  </buildArgs>
                </configuration>
              </execution>
              <execution>
                <id>tag-major</id>
                <goals>
                  <goal>tag</goal>
                </goals>
                <configuration>
                  <tag>${project.majorVersion}</tag>
                </configuration>
              </execution>
              <execution>
                <id>tag-latest</id>
                <goals>
                  <goal>tag</goal>
                </goals>
                <configuration>
                  <tag>latest</tag>
                </configuration>
              </execution>
              <execution>
                <id>push-version</id>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <tag>${project.version}</tag>
                </configuration>
              </execution>
              <execution>
                <id>push-major</id>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <tag>${project.majorVersion}</tag>
                </configuration>
              </execution>
              <execution>
                <id>push-latest</id>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <tag>latest</tag>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <repository>${pathling.fhirServerDockerRepo}</repository>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
