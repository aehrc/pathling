tests:
  # Date/DateTime Comparison Tests - Non-literal paths only

  - desc: "Date/DateTime Equality and Comparison Operations"

  - "group: Date/DateTime Equality (=)":
      - desc: "Same DateTime precision - equal"
        expression: "Observation.effectiveDateTime = issued"
        result: [true]

      - desc: "Different precision - DateTime vs Date - returns empty"
        expression: "Observation.effectiveDateTime = component.where(code.coding.code = 'date-only').valueDate"
        result: [false]

      - desc: "Different dates - same precision"
        expression: "Observation.effectiveDateTime = component.where(code.coding.code = 'different-datetime').valueDateTime"
        result: [false]

      - desc: "Date equality - same date"
        expression: "Observation.component.where(code.coding.code = 'date-only').valueDate = component.where(code.coding.code = 'date-only').valueDate"
        result: [true]

      - desc: "Partial date equality - different precision"
        expression: "Observation.component.where(code.coding.code = 'date-only').valueDate = component.where(code.coding.code = 'partial-date').valueDate"
        result: [false]

  - "group: Date/DateTime Inequality (!=)":
      - desc: "Same DateTime precision - not equal"
        expression: "Observation.effectiveDateTime != issued"
        result: [false]

      - desc: "Different precision - returns empty"
        expression: "Observation.effectiveDateTime != component.where(code.coding.code = 'date-only').valueDate"
        result: [true]

      - desc: "Different dates - same precision"
        expression: "Observation.effectiveDateTime != component.where(code.coding.code = 'different-datetime').valueDateTime"
        result: [true]

  - "group: Date/DateTime Less Than (<)":
      - desc: "DateTime comparison - first before second"
        expression: "Observation.effectiveDateTime < component.where(code.coding.code = 'later-datetime').valueDateTime"
        result: [true]

      - desc: "DateTime comparison - first after second"
        expression: "Observation.effectiveDateTime < component.where(code.coding.code = 'earlier-datetime').valueDateTime"
        result: [false]

      - desc: "Date comparison - overlapping ranges (different precision)"
        expression: "Observation.effectiveDateTime < component.where(code.coding.code = 'partial-date').valueDate"
        result: []

      - desc: "Date comparison - same dates"
        expression: "Observation.effectiveDateTime < issued"
        result: [false]

  - "group: Date/DateTime Less Than or Equal (<=)":
      - desc: "DateTime comparison - first before second"
        expression: "Observation.effectiveDateTime <= component.where(code.coding.code = 'later-datetime').valueDateTime"
        result: [true]

      - desc: "DateTime comparison - same dates"
        expression: "Observation.effectiveDateTime <= issued"
        result: [true]

      - desc: "DateTime comparison - first after second"
        expression: "Observation.effectiveDateTime <= component.where(code.coding.code = 'earlier-datetime').valueDateTime"
        result: [false]

      - desc: "Date comparison - overlapping ranges (different precision)"
        expression: "Observation.effectiveDateTime <= component.where(code.coding.code = 'partial-date').valueDate"
        result: []

  - "group: Date/DateTime Greater Than (>)":
      - desc: "DateTime comparison - first after second"
        expression: "Observation.effectiveDateTime > component.where(code.coding.code = 'earlier-datetime').valueDateTime"
        result: [true]

      - desc: "DateTime comparison - first before second"
        expression: "Observation.effectiveDateTime > component.where(code.coding.code = 'later-datetime').valueDateTime"
        result: [false]

      - desc: "DateTime comparison - same dates"
        expression: "Observation.effectiveDateTime > issued"
        result: [false]

      - desc: "Date comparison - overlapping ranges (different precision)"
        expression: "Observation.effectiveDateTime > component.where(code.coding.code = 'partial-date').valueDate"
        result: []

  - "group: Date/DateTime Greater Than or Equal (>=)":
      - desc: "DateTime comparison - first after second"
        expression: "Observation.effectiveDateTime >= component.where(code.coding.code = 'earlier-datetime').valueDateTime"
        result: [true]

      - desc: "DateTime comparison - same dates"
        expression: "Observation.effectiveDateTime >= issued"
        result: [true]

      - desc: "DateTime comparison - first before second"
        expression: "Observation.effectiveDateTime >= component.where(code.coding.code = 'later-datetime').valueDateTime"
        result: [false]

      - desc: "Date comparison - overlapping ranges (different precision)"
        expression: "Observation.effectiveDateTime >= component.where(code.coding.code = 'partial-date').valueDate"
        result: []

  - "group: Complex Date/DateTime Comparisons":
      - desc: "Multiple date comparisons with filtering"
        expression: "Observation.component.where(valueDateTime >= issued).exists()"
        result: [true]

      - desc: "Date range validation with Period"
        expression: "Observation.component.where(code.coding.code = 'period-test').valuePeriod.start <= component.where(code.coding.code = 'period-test').valuePeriod.end"
        result: [true]

      - desc: "Comparison with Instant type"
        expression: "Observation.effectiveDateTime = component.where(code.coding.code = 'instant-test').valueInstant"
        result: [true]

  - "group: Boundary Cases":
      - desc: "Year-only date comparison"
        expression: "Observation.component.where(code.coding.code = 'year-only').valueDate = component.where(code.coding.code = 'different-year').valueDate"
        result: [false]

      - desc: "Partial date overlapping with full date"
        expression: "Observation.component.where(code.coding.code = 'partial-date').valueDate < component.where(code.coding.code = 'date-only').valueDate"
        result: []

      - desc: "Cross-component date comparison"
        expression: "Observation.component.where(code.coding.code = 'date-only').valueDate = component.where(code.coding.code = 'same-date').valueDate"
        result: [true]

subject:
  resourceType: Observation
  id: datetime-comparison-test
  status: final
  code:
    coding:
      - system: http://loinc.org
        code: "85354-9"
        display: "Blood pressure panel"
  effectiveDateTime: "2023-03-15T10:30:00Z"
  issued: "2023-03-15T10:30:00Z"
  component:
    - code:
        coding:
          - system: http://example.org/test
            code: "date-only"
      valueDate: "2023-03-15"
    - code:
        coding:
          - system: http://example.org/test
            code: "partial-date"
      valueDate: "2023-03"
    - code:
        coding:
          - system: http://example.org/test
            code: "year-only"
      valueDate: "2023"
    - code:
        coding:
          - system: http://example.org/test
            code: "different-year"
      valueDate: "2022"
    - code:
        coding:
          - system: http://example.org/test
            code: "different-datetime"
      valueDateTime: "2023-03-16T10:30:00Z"
    - code:
        coding:
          - system: http://example.org/test
            code: "earlier-datetime"
      valueDateTime: "2023-03-15T09:30:00Z"
    - code:
        coding:
          - system: http://example.org/test
            code: "later-datetime"
      valueDateTime: "2023-03-15T11:30:00Z"
    - code:
        coding:
          - system: http://example.org/test
            code: "instant-test"
      valueInstant: "2023-03-15T10:30:00Z"
    - code:
        coding:
          - system: http://example.org/test
            code: "period-test"
      valuePeriod:
        start: "2023-03-15T10:00:00Z"
        end: "2023-03-15T11:00:00Z"
