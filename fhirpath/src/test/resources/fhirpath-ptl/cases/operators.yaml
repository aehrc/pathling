tests:
  - 'Membership operators':
      - 'Quantity type':
          - desc: '** In for existing quantity in many **'
            expression: "80 'mm[Hg]' in component.value.ofType(Quantity)"
            inputfile: 'Observation_3_comp.json'
            result: [ true ]
          - desc: '** Contains for existing quantity in many **'
            expression: "component.value.ofType(Quantity) contains 72 '/min'"
            inputfile: 'Observation_3_comp.json'
            result: [ true ]
          - desc: '** In for non-existing quantity in many **'
            expression: "72 'mm[Hg]' in component.value.ofType(Quantity)"
            inputfile: 'Observation_3_comp.json'
            result: [ false ]
          - desc: '** Contains non-for existing quantity in many **'
            expression: "component.value.ofType(Quantity) contains 80 '/min'"
            inputfile: 'Observation_3_comp.json'
            result: [ false ]
          - desc: '** In for empty quantity in many **'
            expression: "{} in component.value.ofType(Quantity)"
            inputfile: 'Observation_3_comp.json'
            result: [ ]
          - desc: '** Contains empty quantity in many **'
            expression: "component.value.ofType(Quantity) contains {}"
            inputfile: 'Observation_3_comp.json'
            result: [ ]
          - desc: '** In for existing quantity in one **'
            expression: "80 '/min' in value.ofType(Quantity)"
            inputfile: 'Observation_1.json'
            result: [ true ]
          - desc: '** Contains for existing quantity in one **'
            expression: "value.ofType(Quantity) contains 80 '/min'"
            inputfile: 'Observation_1.json'
            result: [ true ]
          - desc: '** In for non-existing quantity in one **'
            expression: "80 'mm[Hg]' in value.ofType(Quantity)"
            inputfile: 'Observation_1.json'
            result: [ false ]
          - desc: '** Contains non-for existing quantity in one **'
            expression: "value.ofType(Quantity) contains 81 '/min'"
            inputfile: 'Observation_1.json'
            result: [ false ]
          - desc: '** In for empty quantity in many **'
            expression: "{} in value.ofType(Quantity)"
            inputfile: 'Observation_1.json'
            result: [ ]
          - desc: '** Contains empty quantity in many **'
            expression: "value.ofType(Quantity) contains {}"
            inputfile: 'Observation_1.json'
            result: [ ]
      - 'Coding type':
          - desc: '** In for existing coding in many **'
            expression: "http://loinc.org|8480-6||'Systolic blood pressure' in component.code.coding"
            inputfile: 'Observation_3_comp.json'
            result: [ true ]
          - desc: '** Contains for existing coding in many **'
            expression: "component.code.coding contains http://loinc.org|8867-4||'Heart rate'"
            inputfile: 'Observation_3_comp.json'
            result: [ true ]
          - desc: '** In for non-existing coding in many **'
            expression: "http://loinc.org|9999-9||'Non-existent code' in component.code.coding"
            inputfile: 'Observation_3_comp.json'
            result: [ false ]
          - desc: '** Contains non-existing coding in many **'
            expression: "component.code.coding contains http://loinc.org|9999-9||'Non-existent code'"
            inputfile: 'Observation_3_comp.json'
            result: [ false ]
          - desc: '** In for empty coding in many **'
            expression: "{} in component.code.coding"
            inputfile: 'Observation_3_comp.json'
            result: [ ]
          - desc: '** Contains empty coding in many **'
            expression: "component.code.coding contains {}"
            inputfile: 'Observation_3_comp.json'
            result: [ ]
          - desc: '** In for existing coding in one **'
            expression: "http://loinc.org|8867-4||'Heart rate' in code.coding"
            inputfile: 'Observation_1.json'
            result: [ true ]
          - desc: '** Contains for existing coding in one **'
            expression: "code.coding contains http://loinc.org|8867-4||'Heart rate'"
            inputfile: 'Observation_1.json'
            result: [ true ]
          - desc: '** In for non-existing coding in one **'
            expression: "http://loinc.org|9999-9||'Non-existent code' in code.coding"
            inputfile: 'Observation_1.json'
            result: [ false ]
          - desc: '** Contains non-existing coding in one **'
            expression: "code.coding contains http://loinc.org|9999-9||'Non-existent code'"
            inputfile: 'Observation_1.json'
            result: [ false ]
          - desc: '** In for empty coding in one **'
            expression: "{} in code.coding"
            inputfile: 'Observation_1.json'
            result: [ ]
          - desc: '** Contains empty coding in one **'
            expression: "code.coding contains {}"
            inputfile: 'Observation_1.json'
            result: [ ]
      - 'Integer type':
          - desc: '** In for existing Integer in many **'
            expression: "2 in manyInt"
            result: [ true ]
          - desc: '** Contains for existing Integer in many **'
            expression: "manyInt contains 2"
            result: [ true ]
          - desc: '** In for non-existing Integer in many **'
            expression: "5 in manyInt"
            result: [ false ]
          - desc: '** Contains non-existing Integer in many **'
            expression: "manyInt contains 5"
            result: [ false ]
          - desc: '** In for empty Integer in many **'
            expression: "{} in manyInt"
            result: [ ]
          - desc: '** Contains empty Integer in many **'
            expression: "manyInt contains {}"
            result: [ ]
          - desc: '** In for existing Integer in one **'
            expression: "1 in oneInt"
            result: [ true ]
          - desc: '** Contains for existing Integer in one **'
            expression: "oneInt contains 1"
            result: [ true ]
          - desc: '** In for non-existing Integer in one **'
            expression: "2 in oneInt"
            result: [ false ]
          - desc: '** Contains non-existing Integer in one **'
            expression: "oneInt contains 2"
            result: [ false ]
          - desc: '** In for empty Integer in one **'
            expression: "{} in oneInt"
            result: [ ]
          - desc: '** Contains empty Integer in one **'
            expression: "oneInt contains {}"
            result: [ ]
      - 'String type':
          - desc: '** In for existing String in many **'
            expression: "'test2' in manyString"
            result: [ true ]
          - desc: '** Contains for existing String in many **'
            expression: "manyString contains 'test2'"
            result: [ true ]
          - desc: '** In for non-existing String in many **'
            expression: "'test4' in manyString"
            result: [ false ]
          - desc: '** Contains non-existing String in many **'
            expression: "manyString contains 'test4'"
            result: [ false ]
          - desc: '** In for empty String in many **'
            expression: "{} in manyString"
            result: [ ]
          - desc: '** Contains empty String in many **'
            expression: "manyString contains {}"
            result: [ ]
          - desc: '** In for existing String in one **'
            expression: "'test' in oneString"
            result: [ true ]
          - desc: '** Contains for existing String in one **'
            expression: "oneString contains 'test'"
            result: [ true ]
          - desc: '** In for non-existing String in one **'
            expression: "'test2' in oneString"
            result: [ false ]
          - desc: '** Contains non-existing String in one **'
            expression: "oneString contains 'test2'"
            result: [ false ]
          - desc: '** In for empty String in one **'
            expression: "{} in oneString"
            result: [ ]
          - desc: '** Contains empty String in one **'
            expression: "oneString contains {}"
            result: [ ]
      - 'Boolean type':
          - desc: '** In for existing Boolean in many **'
            expression: "true in manyBoolean"
            result: [ true ]
          - desc: '** Contains for existing Boolean in many **'
            expression: "manyBoolean contains false"
            result: [ true ]
          - desc: '** In for non-existing Boolean in many **'
            expression: "{} in manyBoolean"
            result: [ ]
          - desc: '** Contains non-existing Boolean in many **'
            expression: "manyBoolean contains {}"
            result: [ ]
          - desc: '** In for existing Boolean in one **'
            expression: "true in oneBoolean"
            result: [ true ]
          - desc: '** Contains for existing Boolean in one **'
            expression: "oneBoolean contains true"
            result: [ true ]
          - desc: '** In for non-existing Boolean in one **'
            expression: "false in oneBoolean"
            result: [ false ]
          - desc: '** Contains non-existing Boolean in one **'
            expression: "oneBoolean contains false"
            result: [ false ]
          - desc: '** In for empty Boolean in one **'
            expression: "{} in oneBoolean"
            result: [ ]
          - desc: '** Contains empty Boolean in one **'
            expression: "oneBoolean contains {}"
            result: [ ]
      - 'Decimal type':
          - desc: '** In for existing Decimal in many **'
            expression: "2.5 in manyDecimal"
            result: [ true ]
          - desc: '** Contains for existing Decimal in many **'
            expression: "manyDecimal contains 2.5"
            result: [ true ]
          - desc: '** In for non-existing Decimal in many **'
            expression: "4.5 in manyDecimal"
            result: [ false ]
          - desc: '** Contains non-existing Decimal in many **'
            expression: "manyDecimal contains 4.5"
            result: [ false ]
          - desc: '** In for empty Decimal in many **'
            expression: "{} in manyDecimal"
            result: [ ]
          - desc: '** Contains empty Decimal in many **'
            expression: "manyDecimal contains {}"
            result: [ ]
          - desc: '** In for existing Decimal in one **'
            expression: "1.5 in oneDecimal"
            result: [ true ]
          - desc: '** Contains for existing Decimal in one **'
            expression: "oneDecimal contains 1.5"
            result: [ true ]
          - desc: '** In for non-existing Decimal in one **'
            expression: "2.5 in oneDecimal"
            result: [ false ]
          - desc: '** Contains non-existing Decimal in one **'
            expression: "oneDecimal contains 2.5"
            result: [ false ]
          - desc: '** In for empty Decimal in one **'
            expression: "{} in oneDecimal"
            result: [ ]
          - desc: '** Contains empty Decimal in one **'
            expression: "oneDecimal contains {}"
            result: [ ]
      - 'DateTime type':
          - desc: '** In for existing DateTime in many **'
            expression: "@2023-01-02T14:00:00Z in manyDateTime"
            result: [ true ]
          - desc: '** Contains for existing DateTime in many **'
            expression: "manyDateTime contains @2023-01-03T09:30:00Z"
            result: [ true ]
          - desc: '** In for non-existing DateTime in many **'
            expression: "@2023-01-04T10:00:00Z in manyDateTime"
            result: [ false ]
          - desc: '** Contains non-existing DateTime in many **'
            expression: "manyDateTime contains @2023-01-04T10:00:00Z"
            result: [ false ]
          - desc: '** In for empty DateTime in many **'
            expression: "{} in manyDateTime"
            result: [ ]
          - desc: '** Contains empty DateTime in many **'
            expression: "manyDateTime contains {}"
            result: [ ]
          - desc: '** In for existing DateTime in one **'
            expression: "@2023-10-15T09:45:00Z in oneDateTime"
            result: [ true ]
          - desc: '** Contains for existing DateTime in one **'
            expression: "oneDateTime contains @2023-10-15T09:45:00Z"
            result: [ true ]
          - desc: '** In for non-existing DateTime in one **'
            expression: "@2023-10-16T09:45:00Z in oneDateTime"
            result: [ false ]
          - desc: '** Contains non-existing DateTime in one **'
            expression: "oneDateTime contains @2023-10-16T09:45:00Z"
            result: [ false ]
          - desc: '** In for empty DateTime in one **'
            expression: "{} in oneDateTime"
            result: [ ]
          - desc: '** Contains empty DateTime in one **'
            expression: "oneDateTime contains {}"
            result: [ ]
subject:
  oneInt: 1
  manyInt: [ 1, 2, 3 ]
  oneString: "test"
  manyString: [ "test1", "test2", "test3" ]
  oneBoolean: true
  manyBoolean: [ true, false, true ]
  oneDecimal: 1.5
  manyDecimal: [ 1.5, 2.5, 3.5 ]
  oneDateTime: !fhir.dateTime "@2023-10-15T09:45:00Z"
  manyDateTime:
    - !fhir.dateTime "@2023-01-02T14:00:00Z"
    - !fhir.dateTime "@2023-01-03T09:30:00Z"
    - !fhir.dateTime "@2023-01-03T15:45:00Z"
