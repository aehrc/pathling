# Specify the exclutions for the test cases
excludeSet:
  - comment: Global exclusions
    glob: '*.yaml'
    exclude:
      - comment: 'Not supported subsetting functions'
        function:
          - single
          - tail
          - take
          - skip
          - last
          - exclude
          - intersect
      - comment: 'Not supported string functions'
        function:
          - indexOf
          - substring
          - startsWith
          - endsWith
          - contains
          - upper
          - lower
          - replace
          - matches
          - replaceMatches
          - length
          - split
          - toChars
          - trim
          - encode
          - decode
          - escape
          - unescape
      - comment: 'Not supported math5 functions'
        function:
          - abs
          - ceiling
          - floor
          - exp
          - ln
          - log
          - power
          - round
          - sqrt
          - truncate
      - comment: 'Not supported path functions'
        function:
          - descendants
          - children
      - comment: 'Not supported types functions'
        function:
          - is
          - as
      - comment: 'Not supported combining functions'
        function:
          - union
      - comment: 'Not supported existence functions'
        function:
          - all
          - subsetOf
          - supersetOf
          - isDistinct
          - distinct
      - comment: 'Unsupported filtering and projection constructs'
        expression:
          - "(^|\\W)\\$index($|\\W)"
      - comment: 'Not supported aggregate constructs'
        function:
          - aggregate
          - min
          - max
          - avg
        expression:
          - "\\$total"
      - comment: 'Not supported conversion functions'
        function:
          - toBoolean
          - toDateTime
          - toDate
          - toDecimal
          - toInteger
          - toQuantity
          #- toString
          - toTime
          - toType
      - comment: 'Not supported equality'
        expression:
          - " !~ " # not equals operator
          - " ~ " # ~ operator
      - comment: 'Not supported utility functions'
        function:
          - trace
          - timeOfDay
      - comment: 'Not supported misc functions'
        function:
          - repeat
          - combine
          - now
      - comment: 'Not supported operators'
        expression: # regex matching expressoin
          - ".+\\|.+" # union operator
          - " is " # is operator
          - " as " # as operator
          - " & " # & operator
          - " div " # div operator
      - comment: 'Unsupported callendar durations'
        expression: # regex matching expressoin
          - " weeks"
          - " week"
  - comment: Collection exlusions
    glob: "fhirpath/cases/3.2_paths.yaml"
    exclude:
      - comment: "Support for models"
        type: framework-gap
        any:
          - "Observation.value with an R4 FHIR model"
      - comment: "Contained resources not supported"
        type: feature
        expression:
          - "(^|\\W)contained(\\W|$)"
      - comment: "DSTU2, STU3, R5 not supported"
        type: feature
        any:
          - "Observation.value with an R5 FHIR model"
          - "Observation.value with an STU3 FHIR model"
          - "Observation.value with an DSTU2 FHIR model"
      - comment: 'BUG: Traversal into non-resource root properties (uppercase)'
        type: bug
        any:
          - "CustomField = 'test'"
  - comment: Subsetting exclusions
    glob: 'fhirpath/cases/5.3_subsetting.yaml'
    exclude:
      - comment: 'Primitive attributes'
        type: ???
        any:
          - '** first for collection with null values'
  - comment: String manipulation exclusions
    glob: 'fhirpath/cases/5.6_string_manipulation.yaml'
    exclude:
      - comment: 'empty collection: join'
        any:
          - '** join on empty input collection'
  - comment: Math 6 exclusions
    glob: 'fhirpath/cases/6.6_math.yaml'
    exclude:
      - comment: 'Math operations on integers'
        any:
          - '** Can multiply two numbers'
          - '** Can multiply two number literals'
  - comment: Boolean exclusions
    glob: 'fhirpath/cases/6.5_boolean_logic.yaml'
    exclude:
      - comment: 'empty collection: and'
        any:
          - '* and ({} and true)'
          - '* and (true and {})'
          - '* and ({} and false)'
          - '* and (false and {})'
          - '* and (true and null)'
          - '* and (false and null)'
      - comment: 'empty collection: or'
        any:
          - '* or ({} or true)'
          - '* or (true or {})'
          - '* or ({} or false)'
          - '* or (false or {})'
          - '* or ({} or {})'
          - '* or (true or null)'
          - '* or (false or null)'
      - comment: 'empty collection: xor'
        any:
          - '* xor (true xor {})'
          - '* xor ({} xor false)'
          - '* xor (false xor {})'
          - '* xor ({} xor {})'
          - '* xor (true xor null)'
          - '* xor (false xor null)'
          - '* xor ({} xor true)'
      - comment: 'empty collection: implies'
        any:
          - '* implies ({} implies true)'
          - '* implies (true implies {})'
          - '* implies ({} implies false)'
          - '* implies (false implies {})'
          - '* implies ({} implies {})'
      - comment: 'boolean eval of collections: not'
        any:
          - '** not() for non-empty collection'
  - comment: Literal exclusions
    glob: 'fhirpath/cases/4.1_literals.yaml'
    exclude:
      - comment: 'Non issues'
        type: non-issue
        any:
          - "`a\\\\b\\'\\\"\\`\\r\\n\\t\\u0065`"
      - comment: "Framework gaps"
        type: framework-gap
        expression:
          # assertions on quantity values
          - "2 'mo'"
          - "^2 years$"
      - comment: 'Unsupported polarity operator'
        type: feature
        expression:
          - '^[+-]7(.3)?$'
      - comment: 'BUG: escape sequences in string literal'
        type: bug
        any: [ "'a\\\\b\\'\\\"\\`\\r\\n\\t\\u0065'" ]
      - comment: 'BUG: datetime literals with non-second precision'
        type: bug
        any:
          - "@2019-02-03T01:00Z = @2019-02-02T21:00-04:00"
          - "@2019-02-03T02:00Z = @2019-02-02T21:00-04:00"
      - comment: 'BUG: traversal into quantity literals'
        type: bug
        any:
          - "(2 years).value"
  - comment: Existence exclusions
    glob: 'fhirpath/cases/5.1_existence.yaml'
    exclude:
      - comment: 'Support for null values with in exising primitive elements'
        type: ???
        any:
          - "** null is not empty"
          - "** exists for null should return true"
      - comment: 'BUG: exist() for empty collections'
        type: bug
        any:
          - "** empty nothing"
      - comment: 'BUG: not() for empty collections'
        type: bug
        any:
          - "** empty coll with not() is empty coll"
          - "** not nothing is empty coll"
      - comment: "BUG: exist() for empty collections"
        type: bug
        any:
          - "** exists for undefined coll should return false"
          - "** exists with criteria should work for not exists coll"
      - comment: "BUG: allTrue() for empty collections"
        type: bug
        any:
          - "** allTrue for empty coll is true"
          - "** allTrue for non exists coll is true"
      - comment: "BUG: anyTrue() for empty collections"
        type: bug
        any:
          - "** anyTrue for empty coll is false"
          - "** anyTrue for non-exists coll is false"
      - comment: "BUG: allFalse() for empty collections"
        type: bug
        any:
          - "** allFalse for empty coll is true"
          - "** allFalse for non-exists coll is true"
      - comment: "BUG: anyFalse() for empty collections"
        type: bug
        any:
          - "** anyFalse for empty coll is false"
          - "** anyFalse for non-exists coll is false"
      - comment: "BUG: count() for empty collections"
        type: bug
        any:
          - "** 0 if nothing"
  - comment: Filtering and projection exclusions
    glob: "fhirpath/cases/5.2_filtering_and_projection.yaml"
    exclude:
      - comment: 'Unsupported polymorphic collection'
        type: framework-gap
        any:
          - "heteroattr.ofType(String)"
          - "heteroattr.ofType(Integer)"
          - "heteroattr.ofType(Decimal)"
          - "heteroattr.ofType(Boolean)"
  - comment: Literal exclusions
    glob: 'fhirpath/cases/5.5_conversion.yaml'
    exclude:
      - comment: 'Primitive attributes'
        type: ???
        any:
          - '** iif for collection with null values'
      - comment: "Unsupported primitive ids"
        type: feature
        any:
          - "** where for a collection with a null value that has an id"
      - comment: 'BUG: boolean not convertible to string'
        type: bug
        expression:
          - '^attrtrue\.toString\(\)$'
      - comment: 'BUG: precision lost in in decimal literals'
        type: bug
        expression:
          - '^attrdec\.toString\(\)$'
      - comment: "BUG: Filter on empty collections"
        type: bug
        any:
          - "** filter empty coll"
  - comment: Equality exclusions
    glob: 'fhirpath/cases/6.1_equality.yaml'
    exclude:
      - comment: "Bundles are not supported"
        type: framwork-gap
        expression:
          - "(^|\\W)Bundle(\\W|$)"
      - comment: 'Time literals with timezone'
        type: ??? # non-issue
        expression:
          - "@T\\d{2}:\\d{2}:\\d{2}[-+]\\d{2}:\\d{2}"
      - comment: 'Equality for empty values'
        type: ??? # non-issue
        any:
          - "** equality for null values"
          - "** inequality for null values"
      - comment: 'BUG: datetime literals with non-second precision'
        type: bug
        expression:
          - "@\\d{4}-\\d{2}-\\d{2}T\\d{2}[^:]"
          - "@\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}[^:]"
      - comment: 'BUG: equality for quantity literals'
        type: bug
        any:
          - "1 year != 1 'a'"
          - "12 months = 1 year"
          - "1 year = 1 year"
          - "1 month != 1 'mo'"
          - "1 month = 30 days"
          - "1 day = 24 hours"
          - "10 'kg.m/s2' = 5 'kg' * 4 'm' / (2 seconds * 1000 'ms')"
      - comment: "BUG: Equality for different primitive types"
        type: ??? # bug
        any:
          - "DateTime literal compared with a number"
          - "DateTime literal compared with a string literal"
      - comment: "BUG: Equality for complex types"
        type: bug
        any:
          - "** two objects"
          - "** two objects not"
          - "** two colls"
          - "** two colls not"
      - comment: "BUG: Equality for non singular elements"
        type: BUG
        any:
          - "** length mismatch"
          # also the complex type tests above
          - "** two objects"
          - "** two objects not"
          - "** two colls"
          - "** two colls not"
  - comment: 'Comparison exlusions'
    glob: "fhirpath/cases/6.2_comparision.yaml"
    exclude:
      - comment: "BUG: comparison for empty collections"
        type: bug
        any:
          - "less than, with empty value"
          - "less than, with null value"
          - "greater than, with empty value"
          - "greater than, with null value"
          - "greater or equal than, with empty value"
          - "greater or equal than, with null value"
          - "less or equal than, with empty value"
          - "less or equal than, with null value"
      - comment: "BUG: comparision for non-singular collections"
        type: bug
        any:
          - "less than, with too many values"
          - "greater than, with too many values"
          - "greater or equal than, with too many values"
      - comment: "BUG: comparison for time quantities returns null"
        type: bug
        any:
          - "1 year > 12 months"
          - "1 year < 12 months"
          - "1 minute > 59 seconds"
          - "1 minute < 61 seconds"
      - comment: "BUG: Comparison based on the lesser precision"
        type: bug
        any:
          - "@2018-12-31 > @2018"
          - "@T12:01 > @T12"
      - comment: 'Time literals with timezone'
        type: ??? # non-issue
        expression:
          - "@T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?[-+]\\d{2}:\\d{2}"
  - comment: Aggregate exclusions
    glob: 'fhirpath/cases/7_aggregate.yaml'
    exclude:
      - comment: 'BUG: Traversal into non-resource root properties (uppercase)'
        type: bug
        any:
          - "sum() function calculates the sum of undefined input collection"
      - comment: 'BUG: Sum on non-numeric collection'
        type: bug
        any:
          - "sum() function calculates the sum of input collection with null elements"
