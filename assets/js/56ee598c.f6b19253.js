"use strict";(self.webpackChunkpathling_site=self.webpackChunkpathling_site||[]).push([[7493],{5113:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"libraries/kafka","title":"Kafka integration","description":"Pathling supports Kafka as a streaming data source, and all the operations available within the library are able to execute continuously across a stream of data.","source":"@site/versioned_docs/version-7.2.0/libraries/kafka.md","sourceDirName":"libraries","slug":"/libraries/kafka","permalink":"/docs/7.2.0/libraries/kafka","draft":false,"unlisted":false,"editUrl":"https://github.com/aehrc/pathling/tree/main/site/versioned_docs/version-7.2.0/libraries/kafka.md","tags":[],"version":"7.2.0","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"description":"Pathling supports Kafka as a streaming data source, and all the operations available within the library are able to execute continuously across a stream of data."},"sidebar":"libraries","previous":{"title":"Terminology functions","permalink":"/docs/7.2.0/libraries/terminology"},"next":{"title":"pathling-client","permalink":"/docs/7.2.0/libraries/javascript/pathling-client"}}');var i=t(4848),s=t(8453);const o={sidebar_position:7,description:"Pathling supports Kafka as a streaming data source, and all the operations available within the library are able to execute continuously across a stream of data."},r="Kafka integration",c={},l=[];function d(a){const e={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"kafka-integration",children:"Kafka integration"})}),"\n",(0,i.jsxs)(e.p,{children:["Pathling supports ",(0,i.jsx)(e.a,{href:"https://kafka.apache.org/",children:"Kafka"})," as a streaming data source,\nand all the operations available within the library are able to execute\ncontinuously across a stream of data."]}),"\n",(0,i.jsx)(e.p,{children:"Here is an example of streaming a source of FHIR data, encoding it and then\nperforming a terminology operation upon it:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from pathling import PathlingContext, Coding, subsumes\n\npc = PathlingContext.create()\n\n# Subscribe to a stream of FHIR Bundles from a Kafka topic.\ndf = (\n    pc.spark.readStream.format("kafka")\n    .option("kafka.bootstrap.servers", "kafka:9092")\n    .option("subscribe", "some-topic")\n    .load()\n    .selectExpr("CAST(value AS STRING) as json_bundle")\n)\n\n# Pull out the MedicationAdministration resources and put them into a dataset.\nmed_administrations = (\n    pc.encode_bundle(df, "MedicationAdministration")\n    .selectExpr(\n        "id", "status",\n        "EXPLODE_OUTER(medicationCodeableConcept.coding) as coding"\n    )\n)\n\n# Perform a subsumes operation on the medication coding to determine whether it is a type of\n# anti-coagulant.\nresult = med_administrations.select(\n    med_administrations.id,\n    med_administrations.status,\n    med_administrations.coding,\n    subsumes(\n        # 372862008 |Anticoagulant|\n        left_coding=Coding("http://snomed.info/sct", "372862008"),\n        right_coding_column="coding",\n    ).alias("is_anticoagulant"),\n)\n'})}),"\n",(0,i.jsxs)(e.p,{children:["For more information about Spark's Kafka integration, see\nthe ",(0,i.jsx)(e.a,{href:"https://spark.apache.org/docs/latest/structured-streaming-kafka-integration.html",children:"Structured Streaming + Kafka Integration Guide"}),"."]})]})}function p(a={}){const{wrapper:e}={...(0,s.R)(),...a.components};return e?(0,i.jsx)(e,{...a,children:(0,i.jsx)(d,{...a})}):d(a)}},8453:(a,e,t)=>{t.d(e,{R:()=>o,x:()=>r});var n=t(6540);const i={},s=n.createContext(i);function o(a){const e=n.useContext(s);return n.useMemo(function(){return"function"==typeof a?a(e):{...e,...a}},[e,a])}function r(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(i):a.components||i:o(a.components),n.createElement(s.Provider,{value:e},a.children)}}}]);