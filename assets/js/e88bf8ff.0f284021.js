"use strict";(self.webpackChunkpathling_site=self.webpackChunkpathling_site||[]).push([[8572],{4641:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"fhirpath/data-types","title":"Data types","description":"The FHIRPath implementation within Pathling supports the following types of","source":"@site/versioned_docs/version-7.2.0/fhirpath/data-types.md","sourceDirName":"fhirpath","slug":"/fhirpath/data-types","permalink":"/docs/7.2.0/fhirpath/data-types","draft":false,"unlisted":false,"editUrl":"https://github.com/aehrc/pathling/tree/main/site/versioned_docs/version-7.2.0/fhirpath/data-types.md","tags":[],"version":"7.2.0","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"fhirpath","previous":{"title":"Introduction","permalink":"/docs/7.2.0/fhirpath/"},"next":{"title":"Operators","permalink":"/docs/7.2.0/fhirpath/operators"}}');var r=i(4848),t=i(8453);const l={sidebar_position:2},d="Data types",a={},o=[{value:"Boolean",id:"boolean",level:2},{value:"String",id:"string",level:2},{value:"Integer",id:"integer",level:2},{value:"Decimal",id:"decimal",level:2},{value:"DateTime",id:"datetime",level:2},{value:"Date",id:"date",level:2},{value:"Time",id:"time",level:2},{value:"Quantity",id:"quantity",level:2},{value:"Coding",id:"coding",level:2},{value:"Materializable types",id:"materializable-types",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"data-types",children:"Data types"})}),"\n",(0,r.jsx)(n.p,{children:"The FHIRPath implementation within Pathling supports the following types of\nliteral expressions:"}),"\n",(0,r.jsxs)(n.p,{children:["See also: ",(0,r.jsx)(n.a,{href:"https://hl7.org/fhirpath/#literals",children:"Literals"})," and\n",(0,r.jsx)(n.a,{href:"https://hl7.org/fhir/R4/fhirpath.html#types",children:"Using FHIR types in expressions"})]}),"\n",(0,r.jsx)(n.h2,{id:"boolean",children:"Boolean"}),"\n",(0,r.jsxs)(n.p,{children:["The Boolean type represents the logical Boolean values ",(0,r.jsx)(n.code,{children:"true"})," and ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"true\nfalse\n"})}),"\n",(0,r.jsx)(n.h2,{id:"string",children:"String"}),"\n",(0,r.jsxs)(n.p,{children:["String literals are surrounded by single-quotes and may use ",(0,r.jsx)(n.code,{children:"\\"}),"-escapes to\nescape quotes and represent Unicode characters:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unicode characters may be escaped using \\u followed by four hex digits."}),"\n",(0,r.jsxs)(n.li,{children:["Additional escapes are those supported in JSON:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\\\"})," (backslash),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\/"})," (slash),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\f"})," (form feed - ",(0,r.jsx)(n.code,{children:"\\u000c"}),"),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\n"})," (newline - ",(0,r.jsx)(n.code,{children:"\\u000a"}),"),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\r"})," (carriage return - ",(0,r.jsx)(n.code,{children:"\\u000d"}),"),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\t"})," (tab - ",(0,r.jsx)(n.code,{children:"\\u0009"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"``"})," (backtick)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\\'"})," (single-quote)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Unicode is supported in both string literals and delimited identifiers."}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"'test string'\n'urn:oid:3.4.5.6.7.8'\n'M\\u00fcller'           // Includes a Unicode character, evaluates to M\xfcller\n"})}),"\n",(0,r.jsx)(n.h2,{id:"integer",children:"Integer"}),"\n",(0,r.jsx)(n.p,{children:"The Integer type represents whole numbers."}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"352\n-14\n"})}),"\n",(0,r.jsx)(n.h2,{id:"decimal",children:"Decimal"}),"\n",(0,r.jsx)(n.p,{children:"The Decimal type represents real values."}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"14.25\n-3.333\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"The implementation of Decimal within Pathling supports a precision of 32 and a\nscale of 6."})}),"\n",(0,r.jsx)(n.h2,{id:"datetime",children:"DateTime"}),"\n",(0,r.jsxs)(n.p,{children:["The DateTime literal combines the ",(0,r.jsx)(n.a,{href:"#date",children:"Date"})," and ",(0,r.jsx)(n.a,{href:"#time",children:"Time"})," literals and\nis a subset of ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/ISO_8601",children:"ISO 8601"}),". It uses the\n",(0,r.jsx)(n.code,{children:"YYYY-MM-DDThh:mm:ss.ffff\xb1hh:mm"})," format. ",(0,r.jsx)(n.code,{children:"Z"})," is allowed as a synonym for the\nzero (",(0,r.jsx)(n.code,{children:"+00:00"}),") UTC offset."]}),"\n",(0,r.jsxs)(n.p,{children:["Time zone is optional - if it is omitted, the system-configured time zone will\nbe assumed. Seconds and milliseconds precision are supported. Hours precision,\nminutes precision and partial DateTime values (ending with ",(0,r.jsx)(n.code,{children:"T"}),") are not\nsupported."]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@2014-01-25T14:30:14         // Seconds precision\n@2014-01-25T14:30:14+10:00   // Seconds precision with UTC+10 timezone offset\n@2014-01-25T14:30:14.559     // Milliseconds precision\n@2014-01-25T14:30:14.559Z    // Milliseconds precision with UTC timezone offset\n"})}),"\n",(0,r.jsx)(n.h2,{id:"date",children:"Date"}),"\n",(0,r.jsx)(n.p,{children:"The Date type represents date and partial date values, without a time component."}),"\n",(0,r.jsxs)(n.p,{children:["The Date literal is a subset of\n",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/ISO_8601",children:"ISO 8601"}),". It uses the ",(0,r.jsx)(n.code,{children:"YYYY-MM-DD"}),"\nformat, though month and day parts are optional."]}),"\n",(0,r.jsx)(n.p,{children:"Some operations implicitly convert Date values to DateTime values, such as\ncomparison and arithmetic. Note that the Date will be assumed to be in the\nsystem-configured time zone in these instances."}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@2014-01-25    // Year, month and day\n@2014-01       // Year and month only\n@2014          // Year only\n"})}),"\n",(0,r.jsx)(n.h2,{id:"time",children:"Time"}),"\n",(0,r.jsx)(n.p,{children:"The Time type represents time-of-day and partial time-of-day values."}),"\n",(0,r.jsxs)(n.p,{children:["The Time literal uses a subset of\n",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/ISO_8601",children:"ISO 8601"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A time begins with a ",(0,r.jsx)(n.code,{children:"@T"})]}),"\n",(0,r.jsxs)(n.li,{children:["It uses the ",(0,r.jsx)(n.code,{children:"Thh:mm:ss.fff"})," format, minutes, seconds and milliseconds are\noptional"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@T07:30:14.350    // Milliseconds precision\n@T07:30:14        // Seconds precision\n@T14:30:14        // Minutes precision\n@T14              // Hours precision\n"})}),"\n",(0,r.jsx)(n.h2,{id:"quantity",children:"Quantity"}),"\n",(0,r.jsxs)(n.p,{children:["The Quantity type represents quantities with a specified unit, where the value\ncomponent is defined as a Decimal, and the unit element is represented as a\nString that is required to be either a valid\n",(0,r.jsx)(n.a,{href:"https://ucum.org/ucum.html",children:"Unified Code for Units of Measure (UCUM)"})," unit or\none of the calendar duration keywords, singular or plural."]}),"\n",(0,r.jsx)(n.p,{children:"The Quantity literal is a number (integer or decimal), followed by a\n(single-quoted) string representing a valid UCUM unit or calendar duration\nkeyword. If the value literal is an Integer, it will be implicitly converted to\na Decimal in the resulting Quantity value."}),"\n",(0,r.jsx)(n.p,{children:"The calendar duration keywords that are supported are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"year"})," / ",(0,r.jsx)(n.code,{children:"years"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"month"})," / ",(0,r.jsx)(n.code,{children:"months"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"week"})," / ",(0,r.jsx)(n.code,{children:"weeks"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"day"})," / ",(0,r.jsx)(n.code,{children:"days"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"hour"})," / ",(0,r.jsx)(n.code,{children:"hours"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"minute"})," / ",(0,r.jsx)(n.code,{children:"minutes"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"second"})," / ",(0,r.jsx)(n.code,{children:"seconds"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"millisecond"})," / ",(0,r.jsx)(n.code,{children:"milliseconds"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"4.5 'mg'      // UCUM Quantity of 4.5 mg\n100 '[degF]'  // UCUM Quantity of 100 degrees Fahrenheit\n6 months      // Calendar duration of 6 months\n30 days       // Calendar duration of 30 days\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See: ",(0,r.jsx)(n.a,{href:"https://hl7.org/fhirpath/#quantity",children:"Quantity"})]}),"\n",(0,r.jsx)(n.h2,{id:"coding",children:"Coding"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.a,{href:"https://hl7.org/fhir/R4/datatypes.html#Coding",children:"Coding"})," is a representation of\na defined concept using a symbol from a defined\n",(0,r.jsx)(n.a,{href:"https://hl7.org/fhir/R4/codesystem.html",children:"code system"})," - see\n",(0,r.jsx)(n.a,{href:"https://hl7.org/fhir/R4/terminologies.html",children:"Using Codes in resources"})," for more\ndetails."]}),"\n",(0,r.jsxs)(n.p,{children:["The Coding literal comprises a minimum of ",(0,r.jsx)(n.code,{children:"system"})," and ",(0,r.jsx)(n.code,{children:"code"}),", as well as\noptional ",(0,r.jsx)(n.code,{children:"version"}),", ",(0,r.jsx)(n.code,{children:"display"}),", ",(0,r.jsx)(n.code,{children:"userSelected"})," components:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<system>|<code>[|<version>][|<display>[|<userSelected>]]]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Not all code systems require the use of a version to unambiguously specify a\ncode - see\n",(0,r.jsx)(n.a,{href:"https://hl7.org/fhir/R4/codesystem.html#versioning",children:"Versioning Code Systems"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"You can also optionally single-quote each of the components within the Coding\nliteral, in cases where certain characters might otherwise confuse the parser."}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://snomed.info/sct|52101004\nhttp://snomed.info/sct|52101004||Present\nhttp://terminology.hl7.org/CodeSystem/condition-category|problem-list-item|4.0.1|'Problem List Item'\nhttp://snomed.info/sct|'397956004 |Prosthetic arthroplasty of the hip|: 363704007 |Procedure site| = ( 24136001 |Hip joint structure|: 272741003 |Laterality| =  7771000 |Left| )'\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"The Coding literal is not within the FHIRPath specification, and is currently\nunique to the Pathling implementation."})}),"\n",(0,r.jsx)(n.h2,{id:"materializable-types",children:"Materializable types"}),"\n",(0,r.jsxs)(n.p,{children:['There is a subset of all possible FHIR types that can be "materialized", i.e.\nused as the result of an aggregation or grouping expression in\nthe ',(0,r.jsx)(n.a,{href:"/docs/server/operations/aggregate",children:"aggregate"}),"\noperation, or a column expression within\nthe ",(0,r.jsx)(n.a,{href:"/docs/server/operations/extract",children:"extract"}),"\noperation. These types are:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#boolean",children:"Boolean"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#string",children:"String"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#integer",children:"Integer"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#decimal",children:"Decimal"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#date",children:"Date"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#datetime",children:"DateTime"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#time",children:"Time"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#coding",children:"Coding"})}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);