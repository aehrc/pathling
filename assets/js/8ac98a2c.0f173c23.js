"use strict";(self.webpackChunkpathling_site=self.webpackChunkpathling_site||[]).push([[5410],{1470:(e,n,t)=>{t.d(n,{A:()=>_});var i=t(6540),s=t(4164),r=t(3104),a=t(6347),l=t(205),o=t(7485),d=t(1682),c=t(679);function h(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:t,default:i}})=>({value:e,label:n,attributes:t,default:i}))}(t);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function g({queryString:e=!1,groupId:n}){const t=(0,a.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(s),(0,i.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=u(e),[a,o]=(0,i.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r})),[d,h]=g({queryString:t,groupId:s}),[m,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,s]=(0,c.Dv)(n);return[t,(0,i.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),f=(()=>{const e=d??m;return p({value:e,tabValues:r})?e:null})();(0,l.A)(()=>{f&&o(f)},[f]);return{selectedValue:a,selectValue:(0,i.useCallback)(e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),x(e)},[h,x,r]),tabValues:r}}var x=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(4848);function j({className:e,block:n,selectedValue:t,selectValue:i,tabValues:a}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),d=e=>{const n=e.currentTarget,s=l.indexOf(n),r=a[s].value;r!==t&&(o(n),i(r))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:i})=>(0,y.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:d,...i,className:(0,s.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===t);return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function v(e){const n=m(e);return(0,y.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,y.jsx)(j,{...n,...e}),(0,y.jsx)(b,{...n,...e})]})}function _(e){const n=(0,x.A)();return(0,y.jsx)(v,{...e,children:h(e.children)},String(n))}},5747:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"libraries/examples/display-terms","title":"Adding display terms to codes","description":"Tutorial demonstrating how to add human-readable display terms to medical codes using Pathling\'s terminology functions.","source":"@site/docs/libraries/examples/display-terms.md","sourceDirName":"libraries/examples","slug":"/libraries/examples/display-terms","permalink":"/docs/libraries/examples/display-terms","draft":false,"unlisted":false,"editUrl":"https://github.com/aehrc/pathling/tree/main/site/docs/libraries/examples/display-terms.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Adding display terms to codes","description":"Tutorial demonstrating how to add human-readable display terms to medical codes using Pathling\'s terminology functions."},"sidebar":"libraries","previous":{"title":"Streaming queries","permalink":"/docs/libraries/examples/streaming"},"next":{"title":"Querying MIMIC-IV data","permalink":"/docs/libraries/examples/mimic-iv"}}');var s=t(4848),r=t(8453),a=t(1470),l=t(9365);const o={sidebar_position:4,title:"Adding display terms to codes",description:"Tutorial demonstrating how to add human-readable display terms to medical codes using Pathling's terminology functions."},d="Adding display terms to codes",c={},h=[{value:"Why display terms matter",id:"why-display-terms-matter",level:2},{value:"Loading data with codes",id:"loading-data-with-codes",level:2},{value:"Adding display terms for SNOMED CT codes",id:"adding-display-terms-for-snomed-ct-codes",level:2},{value:"Working with different code systems",id:"working-with-different-code-systems",level:2},{value:"Requesting display terms in different languages",id:"requesting-display-terms-in-different-languages",level:2},{value:"Language configuration options",id:"language-configuration-options",level:3},{value:"Working with large datasets",id:"working-with-large-datasets",level:2},{value:"Further reading",id:"further-reading",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"adding-display-terms-to-codes",children:"Adding display terms to codes"})}),"\n",(0,s.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/5cMPfwKjNr4?si=vP6lxe45dZnxaf5P",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0}),"\n",(0,s.jsxs)(n.p,{children:["Healthcare data often contains coded values that are not immediately\nhuman-readable. For example, a SNOMED CT code like ",(0,s.jsx)(n.code,{children:"444814009"}),' represents "Viral\nsinusitis", but without the corresponding display term, the data is difficult to\ninterpret. This tutorial demonstrates how to use Pathling\'s terminology\nfunctions along with\na ',(0,s.jsx)(n.a,{href:"https://hl7.org/fhir/terminology-service.html",children:"FHIR terminology service"})," to\nadd human-readable display terms to codes in your datasets. Note that this guide\nis not specific to FHIR data - you can use these techniques with any dataset\ncontaining coded medical information."]}),"\n",(0,s.jsx)(n.h2,{id:"why-display-terms-matter",children:"Why display terms matter"}),"\n",(0,s.jsx)(n.p,{children:"Codes serve as standardised identifiers for clinical concepts, but they present\nseveral challenges:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Interpretation difficulty"}),": Codes like ",(0,s.jsx)(n.code,{children:"403190006"})," or ",(0,s.jsx)(n.code,{children:"72892002"})," are\nmeaningless without context"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data analysis barriers"}),": Analysts need readable terms to understand\npatterns and trends"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reporting requirements"}),": Human-readable reports require display terms\nalongside codes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Quality assurance"}),": Display terms help validate that codes match intended\nconcepts"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Pathling's terminology functions solve these challenges by connecting to FHIR\nterminology servers to retrieve official display terms, synonyms, and other\nmetadata for medical codes."}),"\n",(0,s.jsx)(n.h2,{id:"loading-data-with-codes",children:"Loading data with codes"}),"\n",(0,s.jsx)(n.p,{children:"For this tutorial, we'll work with a sample dataset containing medical diagnosis\ncodes. Let's load a CSV file with condition records:"}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsx)(l.A,{value:"python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Load sample data with medical condition codes\ncsv = pc.spark.read.options(header=True).csv("conditions.csv")\n\n# Display the structure of our data\ncsv.show()\n'})})}),(0,s.jsx)(l.A,{value:"r",label:"R",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-r",children:'# Load sample data with medical condition codes\ncsv <- pathling_spark(pc) %>%\n        spark_read_csv("conditions.csv", header = TRUE)\n\n# Display the structure of our data\ncsv %>% head()\n'})})})]}),"\n",(0,s.jsx)(n.p,{children:"Our example dataset contains the following columns:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"PATIENT"}),": Unique patient identifier"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ENCOUNTER"}),": Unique encounter identifier"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CODE"}),": SNOMED CT diagnosis codes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DESCRIPTION"}),": Original description of the condition"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"START"}),": Start date of the condition"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"STOP"}),": End date of the condition (if resolved)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"adding-display-terms-for-snomed-ct-codes",children:"Adding display terms for SNOMED CT codes"}),"\n",(0,s.jsxs)(n.p,{children:["The most common use case is adding display terms for SNOMED CT diagnosis codes.\nThe ",(0,s.jsx)(n.code,{children:"display()"})," function retrieves the preferred term for each code:"]}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsx)(l.A,{value:"python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Add SNOMED CT display terms\nresult = csv.withColumn("DISPLAY_NAME", display(to_snomed_coding(csv.CODE)))\n\n# Show results\nresult.select("CODE", "DESCRIPTION", "DISPLAY_NAME").show(truncate=False)\n'})})}),(0,s.jsx)(l.A,{value:"r",label:"R",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-r",children:"# Add SNOMED CT display terms\nresult <- csv %>%\n        mutate(\n                DISPLAY_NAME = !!tx_display(!!tx_to_snomed_coding(CODE))\n        )\n\n# Show results\nresult %>%\n        select(CODE, DESCRIPTION, DISPLAY_NAME) %>%\n        head()\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"This produces results like:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"CODE"}),(0,s.jsx)(n.th,{children:"DESCRIPTION"}),(0,s.jsx)(n.th,{children:"DISPLAY_NAME"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"65363002"}),(0,s.jsx)(n.td,{children:"Otitis media"}),(0,s.jsx)(n.td,{children:"Otitis media"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"16114001"}),(0,s.jsx)(n.td,{children:"Fracture of ankle"}),(0,s.jsx)(n.td,{children:"Fracture of ankle"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"444814009"}),(0,s.jsx)(n.td,{children:"Viral sinusitis (disorder)"}),(0,s.jsx)(n.td,{children:"Viral sinusitis"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"43878008"}),(0,s.jsx)(n.td,{children:"Streptococcal sore throat (disorder)"}),(0,s.jsx)(n.td,{children:"Streptococcal sore throat"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"403190006"}),(0,s.jsx)(n.td,{children:"First degree burn"}),(0,s.jsx)(n.td,{children:"Epidermal burn of skin"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:'Notice how the display terms often provide cleaner, more concise terminology.\nFor example, "(disorder)" suffixes are removed, and some codes get more precise\nclinical terms like "Epidermal burn of skin" instead of "First degree burn".'}),"\n",(0,s.jsx)(n.h2,{id:"working-with-different-code-systems",children:"Working with different code systems"}),"\n",(0,s.jsxs)(n.p,{children:["Pathling supports multiple terminology systems beyond SNOMED CT. You can work\nwith any code system supported by your FHIR terminology server by using the\n",(0,s.jsx)(n.code,{children:"to_coding()"})," function to specify the system URI. Here's an example using\nICD-10-NL (Dutch ICD-10) codes:"]}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsx)(l.A,{value:"python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from pathling import to_coding\n\n# Add display terms for ICD-10-NL codes\nicd_enriched = icd_data.withColumn(\n    "ICD_DISPLAY",\n    display(to_coding(icd_data.CODE, "http://hl7.org/fhir/sid/icd-10-nl"))\n)\n'})})}),(0,s.jsx)(l.A,{value:"r",label:"R",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-r",children:'# Add display terms for ICD-10-NL codes\nicd_enriched <- icd_data %>%\n        mutate(\n                ICD_DISPLAY = !!tx_display(!!tx_to_coding(CODE, "http://hl7.org/fhir/sid/icd-10-nl"))\n        )\n'})})})]}),"\n",(0,s.jsx)(n.h2,{id:"requesting-display-terms-in-different-languages",children:"Requesting display terms in different languages"}),"\n",(0,s.jsxs)(n.p,{children:["Many terminology servers support multi-language display terms, allowing you to\nretrieve terms in the language most appropriate for your users. Pathling\nprovides language support through the ",(0,s.jsx)(n.code,{children:"accept_language"})," parameter, which follows\nthe HTTP Accept-Language header format."]}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsx)(l.A,{value:"python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from pathling import to_loinc_coding\n\n# Create sample LOINC observation data\nloinc_data = pc.spark.createDataFrame([\n    ("8302-2", "Body Height"),\n    ("29463-7", "Body Weight"),\n    ("718-7", "Hemoglobin [Mass/volume] in Blood"),\n    ("8867-4", "Heart rate")\n], ["CODE", "DESCRIPTION"])\n\n# Get display terms in French\nloinc_french = loinc_data.withColumn(\n    "DISPLAY_FR",\n    display(to_loinc_coding(loinc_data.CODE), accept_language="fr")\n)\n\n# Get display terms in multiple languages\nloinc_multilingual = loinc_data.withColumn(\n    "DISPLAY_EN",\n    display(to_loinc_coding(loinc_data.CODE))  # Default language (English)\n).withColumn(\n    "DISPLAY_FR",\n    display(to_loinc_coding(loinc_data.CODE), accept_language="fr")\n).withColumn(\n    "DISPLAY_DE",\n    display(to_loinc_coding(loinc_data.CODE), accept_language="de")\n)\n\n# Show the multilingual results\nloinc_multilingual.select("CODE", "DISPLAY_EN", "DISPLAY_FR",\n                          "DISPLAY_DE").show(truncate=False)\n'})})}),(0,s.jsx)(l.A,{value:"r",label:"R",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-r",children:'# Create sample LOINC observation data\nloinc_data <- tibble(\n        CODE = c("8302-2", "29463-7", "718-7", "8867-4"),\n        DESCRIPTION = c(\n                "Body Height",\n                "Body Weight",\n                "Hemoglobin [Mass/volume] in Blood",\n                "Heart rate"\n        )\n) %>%\n        copy_to(pathling_spark(pc), ., name = "loinc_data")\n\n# Get display terms in French\nloinc_french <- loinc_data %>%\n        mutate(\n                DISPLAY_FR = !!tx_display(!!tx_to_loinc_coding(CODE), accept_language = "fr")\n        )\n\n# Get display terms in multiple languages\nloinc_multilingual <- loinc_data %>%\n        mutate(\n                DISPLAY_EN = !!tx_display(!!tx_to_loinc_coding(CODE)),  # Default language (English)\n                DISPLAY_FR = !!tx_display(!!tx_to_loinc_coding(CODE), accept_language = "fr"),\n                DISPLAY_DE = !!tx_display(!!tx_to_loinc_coding(CODE), accept_language = "de")\n        )\n\n# Show the multilingual results\nloinc_multilingual %>%\n        select(CODE, DISPLAY_EN, DISPLAY_FR, DISPLAY_DE) %>%\n        head()\n'})})})]}),"\n",(0,s.jsx)(n.p,{children:"This produces multilingual display terms like:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"CODE"}),(0,s.jsx)(n.th,{children:"DISPLAY_EN"}),(0,s.jsx)(n.th,{children:"DISPLAY_FR"}),(0,s.jsx)(n.th,{children:"DISPLAY_DE"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"8302-2"}),(0,s.jsx)(n.td,{children:"Body Height"}),(0,s.jsx)(n.td,{children:"Taille du patient [Longueur] Patient ; Num\xe9rique"}),(0,s.jsx)(n.td,{children:"K\xf6rpergr\xf6\xdfe"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"29463-7"}),(0,s.jsx)(n.td,{children:"Body Weight"}),(0,s.jsx)(n.td,{children:"Poids corporel [Masse] Patient ; Num\xe9rique"}),(0,s.jsx)(n.td,{children:"K\xf6rpergewicht"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"718-7"}),(0,s.jsx)(n.td,{children:"Hemoglobin [Mass/volume] in Blood"}),(0,s.jsx)(n.td,{children:"H\xe9moglobine [Masse/Volume] Sang ; Num\xe9rique"}),(0,s.jsx)(n.td,{children:"H\xe4moglobin [Masse/Volumen] in Blut"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"8867-4"}),(0,s.jsx)(n.td,{children:"Heart rate"}),(0,s.jsx)(n.td,{children:"Fr\xe9quence cardiaque"}),(0,s.jsx)(n.td,{children:"Herzfrequenz"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"language-configuration-options",children:"Language configuration options"}),"\n",(0,s.jsx)(n.p,{children:"You can configure language preferences in several ways:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Set a default language for the entire session"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'pc = PathlingContext.create(accept_language="fr")\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Override language per function call"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'display(coding, accept_language="de")\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use weighted preferences"})," (server will use the first available):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'display(coding, accept_language="fr;q=0.9,en;q=0.5")\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Note that language support depends on your terminology server's capabilities and\nthe specific code system. LOINC and SNOMED CT generally have good multi-language\nsupport, while other systems may be more limited."}),"\n",(0,s.jsx)(n.h2,{id:"working-with-large-datasets",children:"Working with large datasets"}),"\n",(0,s.jsx)(n.p,{children:"Pathling includes an internal terminology request cache that automatically\noptimises repeated code lookups. This means you can process large datasets\ndirectly without worrying about duplicate terminology server requests."}),"\n",(0,s.jsx)(n.p,{children:"The internal cache ensures that once a code has been looked up, subsequent\nrequests for the same code return immediately without contacting the terminology\nserver. This makes the simple, direct approach both performant and easy to\nunderstand."}),"\n",(0,s.jsx)(n.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/libraries/terminology",children:"Terminology functions"})," - Complete reference\nfor all terminology functions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/libraries/examples/grouping-snomed",children:"Grouping and analysing SNOMED CT data"})," -\nAdvanced techniques for working with SNOMED CT hierarchies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=5cMPfwKjNr4",children:"YouTube tutorial: Adding display terms to codes"})," -\nVideo walkthrough of the techniques demonstrated in this example"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://hl7.org/fhir/terminology-service.html",children:"FHIR Terminology Services"})," -\nUnderstanding the underlying terminology server capabilities"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var i=t(4164);const s={tabItem:"tabItem_Ymn6"};var r=t(4848);function a({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,t),hidden:n,children:e})}}}]);