# This workflow will build the software to ensure there are no errors, and also execute the tests.

name: Test

# This workflow runs on all pull requests except those from release branches.
on:
  pull_request:

env:
  # The add-exports and add-opens flags are required for Java 21
  MAVEN_OPTS: --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    # Skip pull requests from release branches (handled by pre-release workflow).
    if: "!startsWith(github.head_ref, 'release/')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "zulu"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.1.3"
          use-public-rspm: true

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |-
            ${{ runner.os }}-maven-

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('lib/python/requirements/dev.txt', 'lib/python/requirements/package.txt') }}

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/Library
          key: r-packages-${{ runner.os }}-${{ hashFiles('lib/R/DESCRIPTION.src') }}
          restore-keys: r-packages-${{ runner.os }}-

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install TinyTeX and libcurl
        # These are required for building the R package documentation.
        run: |
          wget -qO- "https://yihui.org/tinytex/install-bin-unix.sh" | sh
          echo "$HOME/bin" >> $GITHUB_PATH
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Run install goal
        if: (!(startsWith(steps.extract-info.outputs.branch_name , 'release/') && endsWith(steps.extract-info.outputs.maven_version, '-SNAPSHOT')))
        env:
          PYSPARK_PYTHON: ${{ steps.python-install.outputs.python-path }}
          PYSPARK_DRIVER_PYTHON: ${{ steps.python-install.outputs.python-path }}
          R_KEEP_PKG_SOURCE: yes
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn --batch-mode install \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=aehrc_pathling -Dsonar.organization=aehrc \
          -Dsonar.host.url=https://sonarcloud.io \
          -pl '!site,!benchmark'
        timeout-minutes: 60

      - name: Save test reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: "**/surefire-reports/"

      - name: Save coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            **/jacoco.xml
            **/target/site/jacoco
            **/target/site/jacoco-aggregate
            lib/python/**/coverage.xml

      - name: Save built JARs
        uses: actions/upload-artifact@v4
        with:
          name: jars
          path: |
            utilities/target/utilities-*.jar
            encoders/target/encoders-*.jar
            terminology/target/terminology-*.jar
            fhirpath/target/fhirpath-*.jar
            library-api/target/library-api-*.jar
            library-runtime/target/library-runtime-*.jar
            lib/python/target/python-*.jar
            lib/R/target/r-*.jar
          if-no-files-found: "error"

      - name: Save Python wheel
        uses: actions/upload-artifact@v4
        with:
          name: python-wheel
          path: lib/python/target/py-dist/pathling-*.whl

      - name: Save R package
        uses: actions/upload-artifact@v4
        with:
          name: r-package
          path: lib/R/target/pathling_*.tar.gz
