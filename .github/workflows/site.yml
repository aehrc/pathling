# This workflow deploys the documentation site to GitHub Pages.

name: Deploy site

# This workflow only runs on the main branch.
on:
  push:
    branches:
      - main

env:
  # The add-exports and add-opens flags are required for Java 21
  MAVEN_OPTS: --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED

jobs:
  site:
    name: Build and deploy site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "zulu"

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        id: python-install
        with:
          python-version: 3.9

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.1.3"
          use-public-rspm: true

      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |-
            ${{ runner.os }}-maven-

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('lib/python/requirements/dev.txt', 'lib/python/requirements/package.txt') }}

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/Library
          key: r-packages-${{ runner.os }}-${{ hashFiles('lib/R/DESCRIPTION.src') }}
          restore-keys: r-packages-${{ runner.os }}-

      - name: Install TinyTeX and libcurl
        # These are required for building the R package documentation.
        run: |
          wget -qO- "https://yihui.org/tinytex/install-bin-unix.sh" | sh
          echo "$HOME/bin" >> $GITHUB_PATH
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Run install goal
        env:
          PYSPARK_PYTHON: ${{ steps.python-install.outputs.python-path }}
          PYSPARK_DRIVER_PYTHON: ${{ steps.python-install.outputs.python-path }}
          R_KEEP_PKG_SOURCE: yes
        run: |
          mvn --batch-mode install \
          -pl site -am -DskipTests -Pdocs
        timeout-minutes: 60

      - name: Save site
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: site/target/site/

      - name: Copy R package into site
        run: |
          mkdir -p site/target/site/R
          cp lib/R/target/pathling_*.tar.gz site/target/site/R/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site/target/site
