# This workflow builds the documentation site, and deploys it to GitHub Pages.
#
# This is executed when a commit is pushed to the main branch.

name: Deploy site

on:
  push:
    branches:
      - main

env:
  # The add-exports and add-opens flags are required for Java 17
  MAVEN_OPTS: --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED

jobs:
  deploy:
    name: GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 3.13.2
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Extract Spark version
        working-directory: lib/R
        run: echo "SPARK_VERSION=$(mvn help:evaluate -Dexpression=pathling.Rapi.sparkVersion -q -DforceStdout)" >> $GITHUB_ENV
      - name: Extract Hadoop version
        working-directory: lib/R
        run: echo "HADOOP_VERSION=$(mvn help:evaluate -Dexpression=pathling.Rapi.hadoopVersion -q -DforceStdout)" >> $GITHUB_ENV
      - name: Cache Spark
        id: cache-spark
        uses: actions/cache@v4
        with:
          path: /home/runner/spark/spark-${{ env.SPARK_VERSION }}-bin-hadoop${{ env.HADOOP_VERSION }}
          key: spark-${{ env.SPARK_VERSION }}-bin-hadoop${{ env.HADOOP_VERSION }}
      - name: Install Pandoc
        uses: r-lib/actions/setup-pandoc@v2
      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.1.3"
          use-public-rspm: true
      - name: Install texlive and libcurl
        run: sudo apt-get install -y texlive-latex-base texlive-fonts-extra libcurl4-openssl-dev
      - name: Run the verify goal with Maven
        run: >-
          mvn --batch-mode verify
          -pl site -am
          -Pdocs
          -DskipTests
        timeout-minutes: 45
      - name: Copy R package into site
        run: |
          mkdir site/target/site/R
          cp lib/R/target/pathling_*.tar.gz site/target/site/R/
      - name: Copy index.yaml into site
        run: cp deployment/helm/target/helm/index.yaml site/target/site/helm/
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site/target/site
